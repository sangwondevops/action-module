name: patch-image
author: EleSangwon
description: 'Use patch-image job in github action .'
inputs:
  PERSONAL_ACCESS_TOKEN:
    description: 'set pat'
    required: true
    default: ''
  PROJECT:
    description: 'set project'
    required: true
    default: 'example'
  PROJECT_NAME:
    description: 'set project name'
    required: true
    default: '${{ inputs.PROJECT_NAME }}'
  ENVIRONMENT:
    description: 'set env'
    required: true
    default: 'develop'
outputs:
  APPROVE_PR_URL:
    description: 'Get APPROVE_PR_URL'
    value: ${{ steps.var.outputs.APPROVE_PR_URL }}

runs:
  using: "composite"
  steps:
    - name: gh auth login
      shell: bash
      run: |
        echo ${{ inputs.PERSONAL_ACCESS_TOKEN }} | gh auth login --with-token
      - name: get github sha
        run: |
          echo ${{ github.sha }}
          git remote -v 

          sed -i "s|tag: .*|tag: ${{ github.sha }}|" appications/${{ inputs.PROJECT }}/${{ inputs.PROJECT_NAME }}/helm-chart/values/${{ inputs.environment }}/image.yaml
          git add .
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Update ${{ inputrs.PROJECT_NAME }} image tag in ${{ inputs.environment }}."
          git push origin master

      - name: create pr to master
        id: var
        shell: bash
        run: |
          if [[ ${{ inputs.environment }} == "staging" ]]; then
            timestamp=`echo $(date +%Y-%m-%d-%H-%M-%S)`
            git pull origin master
            git checkout -b ${{ inputs.PROJECT_NAME }}-$timestamp

            sed -i "s|tag: .*|tag: ${{ github.sha }}|" appications/example/${{ inputs.PROJECT_NAME }}/helm-chart/values/production/image.yaml

            git add .
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -m "Update ${{ inputs.PROJECT_NAME }} image tag in Production."
            git push origin ${{ inputs.PROJECT_NAME }}-$timestamp

            pr_url=$(gh pr create --base master --title "Update ${{ inputs.PROJECT_NAME }} Image tag in Production." --body "Update image tag to production" --head ${{ inputs.PROJECT_NAME }}-$timestamp)
            echo "APPROVE_PR_URL=$pr_url" >> $GITHUB_OUTPUT
            echo "APPROVE_PR_URL: $pr_url"
          fi
        
        
