name: create-pr
author: EleSangwon
description: 'Use create-pr job in github action .'
inputs:
  PERSONAL_ACCESS_TOKEN:
    description: 'branch or tag'
    required: true
    default: ''
  TAG:
    description: 'set tag'
    required: true
    default: 'v0.0.0'
  BASE:
    description: 'set gh pr base'
    required: false
    default: 'production'
runs:
  using: "composite"
  steps:
    - name: gh auth login
      shell: bash
      run: |
        echo ${{ inputs.PERSONAL_ACCESS_TOKEN }} | gh auth login --with-token
    - name: tag extract
      id: extract
      shell: bash
      run: |
        tag=${{ inputs.TAG }}
        tag=${tag%-*}
        echo $tag
        echo "extract-tag=$tag" >> $GITHUB_OUTPUT
    - name: check release branch exist
      id: var
      shell: bash
      run: |
        branch=$(gh pr list -s open -H release/${{ steps.extract.outputs.extract-tag }} --json headRefName | jq '.[] | .headRefName')
        echo "branch: ${branch}"
        echo "is_branch=false" >> $GITHUB_OUTPUT
        if [[ ${branch} == *"release/${{ steps.extract.outputs.extract-tag }}"* ]]; then
          echo "is_branch=true" >> $GITHUB_OUTPUT
        fi
    - name: check output 
      shell: bash
      run: |
        echo ${{ steps.var.outputs.is_branch }}
        echo ${{ steps.extract.outputs.extract-tag }}
    - name: create branch
      if: |
        steps.var.outputs.is_branch == 'false'
      shell: bash
      run: |
        git checkout -b release/${{ steps.extract.outputs.extract-tag }}
        git push origin release/${{ steps.extract.outputs.extract-tag }}
    - name: Create Pull Request
      if: |
        steps.var.outputs.is_branch == 'false'
      shell: bash
      run: |
        gh pr create --base ${{ inputs.BASE }} --title "Create PR Release -> ${{ inputs.BASE }}" --body "Create PR Release -> ${{ inputs.BASE }}" --head release/${{ steps.extract.outputs.extract-tag }}
    - name: update branch
      if: |
        steps.var.outputs.is_branch == 'true'
      shell: bash
      run: |
        echo "extract-tag: ${{ steps.extract.outputs.extract-tag }}"
        echo "github-sha: ${{ github.sha }}"
        git checkout release/${{ steps.extract.outputs.extract-tag }}
        git merge ${{ github.sha }}
        git push origin release/${{ steps.extract.outputs.extract-tag }}